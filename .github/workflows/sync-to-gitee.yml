name: 🚀 Sync GitHub Release to Gitee

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  sync-release:
    runs-on: ubuntu-latest

    steps:
    - name: ⬇️ Checkout (with tags)
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: 🔖 Get latest tag
      id: get-tag
      uses: actions-ecosystem/action-get-latest-tag@v1

    - name: 📌 Export tag
      run: echo "LATEST_TAG=${{ steps.get-tag.outputs.tag }}" >> $GITHUB_ENV

    - name: 🧾 Show tag
      run: echo "Tag is $LATEST_TAG"

    - name: 📦 Download GitHub Release assets
      run: |
        AUTH="Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}"
        API="https://api.github.com/repos/${{ github.repository }}/releases/tags/$LATEST_TAG"
        curl -sSL -H "$AUTH" "$API" > release.json
        jq -r '.assets[] | "\(.name) \(.url)"' release.json > assets.txt
        while read -r name url; do
          curl -L -H "$AUTH" -H "Accept: application/octet-stream" "$url" -o "$name"
        done < assets.txt

    - name: 📤 Create Gitee Release and upload assets
      run: |
        # clean repo
        RAW="${{ secrets.GITEE_REPO }}"
        CLEAN="${RAW//$'\n'/}"; CLEAN="${CLEAN//$'\r'/}"

        # create release
        CREATE_API="https://gitee.com/api/v5/repos/$CLEAN/releases?access_token=${{ secrets.GITEE_TOKEN }}"
        resp=$(curl -s -X POST "$CREATE_API" \
          -H "Content-Type: application/json" \
          -d "{
            \"tag_name\":\"$LATEST_TAG\",
            \"name\":\"Release $LATEST_TAG\",
            \"body\":\"同步自 GitHub Release $LATEST_TAG\",
            \"target_commitish\":\"master\"
          }")
        release_id=$(echo "$resp" | jq -r '.id')
        [ -n "$release_id" ] && [ "$release_id" != "null" ] || { echo "❌ Failed to create release"; exit 1; }

        # upload each file
        for file in *; do
          [ -f "$file" ] || continue
          ef=$(python3 -c "import sys,urllib.parse; print(urllib.parse.quote(sys.argv[1]))" "$file")
          UPLOAD_URL="https://gitee.com/api/v5/repos/$CLEAN/releases/$release_id/assets?access_token=${{ secrets.GITEE_TOKEN }}"
          http_code=$(curl -w "%{http_code}" -o /tmp/resp.json -X POST "$UPLOAD_URL" \
            -F "name=$ef" \
            -F "attachment=@$file")
          if [ "$http_code" != "201" ]; then
            echo "❌ Upload $file failed (HTTP $http_code)"; cat /tmp/resp.json; exit 1
          else
            echo "✅ Uploaded $file"
          fi
        done
