name: 🚀 Sync GitHub Release to Gitee

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  sync-release:
    runs-on: ubuntu-latest

    steps:
    - name: ⏱ 获取最新 Git Tag
      id: get-latest-tag
      uses: actions-ecosystem/action-get-latest-tag@v1

    - name: 🔍 打印 Tag
      run: echo "Latest tag is ${{ steps.get-latest-tag.outputs.tag }}"

    - name: 📥 下载所有 Release 附件
      uses: dsaltares/fetch-gh-release-asset@v1
      with:
        repo: ${{ github.repository }}
        tag: ${{ steps.get-latest-tag.outputs.tag }}
        file: "*"
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: 📤 上传到 Gitee Release
      run: |
        TAG=${{ steps.get-latest-tag.outputs.tag }}
        NAME="Release $TAG"
        BODY="同步自 GitHub 的 Release $TAG"
        GITEE_API="https://gitee.com/api/v5/repos/${{ secrets.GITEE_REPO }}/releases"

        echo "🚀 正在创建 Gitee Release..."
        response=$(curl -s -X POST "$GITEE_API" \
          -H "Content-Type: application/json" \
          -d '{
            "access_token": "'${{ secrets.GITEE_TOKEN }}'",
            "tag_name": "'$TAG'",
            "name": "'$NAME'",
            "body": "'$BODY'"
          }')

        echo "$response"
        release_id=$(echo "$response" | grep -o '"id":[0-9]*' | grep -o '[0-9]*')

        if [ -z "$release_id" ]; then
          echo "❌ Gitee Release 创建失败。"
          exit 1
        fi

        echo "📤 开始上传附件..."
        for file in *; do
          [ -f "$file" ] || continue
          echo "📤 正在上传 $file 到 Gitee..."
          curl -s -X POST "https://gitee.com/api/v5/repos/${{ secrets.GITEE_REPO }}/releases/$release_id/assets" \
            -H "Content-Type: multipart/form-data" \
            -F "access_token=${{ secrets.GITEE_TOKEN }}" \
            -F "name=$file" \
            -F "attachment=@$file"
        done
